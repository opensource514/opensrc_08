name: CI

on:
  workflow_call:

jobs:
  commitlint:
    # runs-on: ubuntu-22.04
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install required dependencies
        run: |
          sudo apt update
          sudo apt install -y sudo
          sudo apt install -y git curl
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest
          npm install --save-dev @commitlint/{config-conventional,cli}
          
      - name: Configure commitlint
        run: |
          # for the required format, check https://github.com/conventional-changelog/commitlint/tree/master/@commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        id: push_commitlint
        run: 
          npx commitlint --from HEAD~1 --to HEAD --verbose
          echo "OUTPUT=${{ steps.push_commitlint.outputs.stdout }}" >> $GITHUB_ENV

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        id: pr_commitlint
        run: 
          npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose 
          echo "OUTPUT=${{ steps.pr_commitlint.outputs.stdout }}" >> $GITHUB_ENV

      - name: Print commitlint output
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = '${{ steps.push_commitlint.outputs.stdout }}';
            console.log(output);
            # const { context } = require('@actions/github');
            const { GitHub } = require('@actions/github/lib/utils');
            const octokit = new GitHub(process.env.GITHUB_TOKEN);
            octokit.checks.create({
              ...context.repo,
              name: 'Commitlint Output',
              head_sha: context.sha,
              conclusion: 'success',
              output: {
                title: 'Commitlint Output',
                summary: output
              }
            });
      
      # - name: print error info
      #   if: ${{ failure() }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run: |
        #   echo "::error file=${{ github.workspace }}/error.log::$(npx commitlint --from HEAD~1 --to HEAD --verbose 2>&1 | tee -a ${GITHUB_WORKSPACE}/error.log)"
        # run: |
        #   npx commitlint --from HEAD~1 --to HEAD --verbose > ${{ github.workspace }}/error.log
        #   echo "::error file=${{ github.workspace }}/error.log::$(cat ${{ github.workspace }}/error.log)"
